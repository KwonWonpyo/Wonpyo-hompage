{"version":3,"file":"static/js/117.ac5f71a0.chunk.js","mappings":"yNAWMA,EAAW,CACf,iCACA,oFACA,uGACA,4GACA,KACA,yBACA,kCAqBIC,EAAY,SAAHC,GAAyB,IAAnBC,EAAWD,EAAXC,YAInBC,GAA0BC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9BI,EAAGF,EAAA,GAAEG,EAAUH,EAAA,GACtBI,GAAiCL,EAAAA,EAAAA,UAASL,EAASQ,IAAKG,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjDE,EAAOD,EAAA,GAAEE,EAAaF,EAAA,GAC7BG,GAA2BT,EAAAA,EAAAA,UAAS,GAAEU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/BE,EAAID,EAAA,GAAEE,EAAUF,EAAA,GAwBvB,OAhDkB,SAACG,EAAUC,GAC7B,IAAMC,GAAgBC,EAAAA,EAAAA,WAEtBC,EAAAA,EAAAA,YAAU,WACRF,EAAcG,QAAUL,CAC1B,GAAG,CAACA,KAEJI,EAAAA,EAAAA,YAAU,WACR,GAAIH,EAAO,CACT,IAAMK,EAAKC,aAAY,WACrBL,EAAcG,SAChB,GAAGJ,GACH,OAAO,kBAAMO,cAAcF,EAAI,CACjC,CACA,OAAO,WAAO,CAChB,GAAG,CAACL,GACN,CAWEQ,EAAY,WACV,IAAIC,EAASpB,EACTqB,EAAUb,EACVA,EAXO,IAWQhB,EAASQ,GAAKsB,SAC/BF,GAAU,EACVC,EAAU,GAERD,IAAW5B,EAAS8B,OAClB3B,IACFM,EAAW,GACXQ,EAAW,KAKbJ,EAAcb,EAAS4B,GAAQG,MAAM,EAAGF,IACxCpB,EAAWmB,GACXX,EAAWY,EAAU,GAEzB,GA1Bc,KA6BZG,EAAAA,EAAAA,KAAA,OACEC,UAAU,mBACVC,MAAO,CAAEC,SAAU,OAAQC,OAAQ,QAEnCC,UAEAL,EAAAA,EAAAA,KAAA,KAAAK,SAAIzB,KAGV,EAEAX,EAAUqC,aAAe,CACvBnC,aAAa,GAOf,Q,UC/DA,EAnBgB,WAAH,OACX6B,EAAAA,EAAAA,KAACO,EAAAA,EAAI,CACHC,MAAM,UACNC,YAAY,wCAASJ,UAErBK,EAAAA,EAAAA,MAAA,WAAST,UAAU,OAAOT,GAAG,UAASa,SAAA,EACpCL,EAAAA,EAAAA,KAAA,UAAAK,UACEL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOI,UACpBL,EAAAA,EAAAA,KAAA,MAAAK,UAAIL,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAACC,GAAG,WAAUP,SAAC,mBAG5BL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUI,UACvBL,EAAAA,EAAAA,KAAC/B,EAAS,CAACE,aAAW,OAExB6B,EAAAA,EAAAA,KAACa,EAAAA,EAAY,QAEV,C","sources":["components/Contact/EmailLink.js","pages/Contact.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\n// Validates the first half of an email address.\n// const validateText = (text) => {\n//   // NOTE: Passes RFC 5322 but not tested on google's standard.\n//   // eslint-disable-next-line no-useless-escape\n//   const re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))$/;\n//   return re.test(text) || text.length === 0;\n// };\n\nconst messages = [\n  '안녕하세요',\n  '새로운 일은 언제나 환영합니다',\n  '안테나 공학과 관련된 일도 가능합니다',\n  '좋은 포지션을 제안해주셔서 감사합니다',\n  'Hi',\n  'Thanks for visiting me',\n  'please feel free to contact me',\n];\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (delay) {\n      const id = setInterval(() => {\n        savedCallback.current();\n      }, delay);\n      return () => clearInterval(id);\n    }\n    return () => {}; // pass linter\n  }, [delay]);\n};\n\nconst EmailLink = ({ loopMessage }) => {\n  const hold = 50; // ticks to wait after message is complete before rendering next message\n  const delay = 50; // tick length in mS\n\n  const [idx, updateIter] = useState(0); // points to current message\n  const [message, updateMessage] = useState(messages[idx]);\n  const [char, updateChar] = useState(0); // points to current char\n  // const [isActive, setIsActive] = useState(true); // disable when all messages are printed\n\n  useInterval(() => {\n    let newIdx = idx;\n    let newChar = char;\n    if (char - hold >= messages[idx].length) {\n      newIdx += 1;\n      newChar = 0;\n    }\n    if (newIdx === messages.length) {\n      if (loopMessage) {\n        updateIter(0);\n        updateChar(0);\n      } else {\n        // setIsActive(false);\n      }\n    } else {\n      updateMessage(messages[newIdx].slice(0, newChar));\n      updateIter(newIdx);\n      updateChar(newChar + 1);\n    }\n  }, delay);\n\n  return (\n    <div\n      className=\"inline-container\"\n      style={{ fontSize: '20pt', height: '20vh' }}\n      // onMouseEnter={() => setIsActive(false)}\n      // onMouseLeave={() => (idx < messages.length) && setIsActive(true)}\n    >\n      <p>{message}</p>\n    </div>\n  );\n};\n\nEmailLink.defaultProps = {\n  loopMessage: true,\n};\n\nEmailLink.propTypes = {\n  loopMessage: PropTypes.bool,\n};\n\nexport default EmailLink;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\nimport EmailLink from '../components/Contact/EmailLink';\nimport ContactIcons from '../components/Contact/ContactIcons';\n\nconst Contact = () => (\n  <Main\n    title=\"Contact\"\n    description=\"권원표 연락처\"\n  >\n    <article className=\"post\" id=\"contact\">\n      <header>\n        <div className=\"title\">\n          <h2><Link to=\"/contact\">Contact</Link></h2>\n        </div>\n      </header>\n      <div className=\"email-at\">\n        <EmailLink loopMessage />\n      </div>\n      <ContactIcons />\n    </article>\n  </Main>\n);\n\nexport default Contact;\n"],"names":["messages","EmailLink","_ref","loopMessage","_useState","useState","_useState2","_slicedToArray","idx","updateIter","_useState3","_useState4","message","updateMessage","_useState5","_useState6","char","updateChar","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","newIdx","newChar","length","slice","_jsx","className","style","fontSize","height","children","defaultProps","Main","title","description","_jsxs","Link","to","ContactIcons"],"sourceRoot":""}